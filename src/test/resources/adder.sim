###
# Simulation test case for the adder
###

import adder.netlist

simulation adder-test

	source cin
	source a[4]
	source b[4]
	
	probe cout
	probe sum
	
	component adder adderSlice
	
	net cin adder.cin
	net a adder.a
	net b adder.b
	net cout adder.cout
	net sum adder.q
	
	
	generate[ b a cin ] expect[ cout sum ]
	
		@0   0x0 0x0 0    0 0x0
		@10  0x0 0x0 1    0 0x1
		@20  0x0 0x1 0    0 0x1
		@30  0x0 0x1 1    0 0x2
		@40  0x1 0x0 0    0 0x1
		@50  0x1 0x0 1    0 0x2
		@60  0x1 0x1 0    0 0x2
		@70  0x1 0x1 1    0 0x3
		@80  0x2 0x2 0    0 0x4
		@90  0x2 0x2 1    0 0x5
		@100 0x3 0x3 0    0 0x6
		@110 0x3 0x3 1    0 0x7
		@120 0x4 0x4 0    0 0x8
		@130 0x4 0x4 1    0 0x9
		@140 0x7 0x7 0    0 0xe
		@150 0x7 0x7 1    0 0xf
		@160 0x8 0x8 0    1 0x0
		@170 0x8 0x8 1    1 0x1
		@180 0xf 0xf 0    1 0xe
		@190 0xf 0xf 1    1 0xf
		
; # end simulation